# Set the language.
language: go

# Set test platforms.
os:
  - osx
  - linux

# Set our Go version(s). Mutagen generally only supports a specific version of
# Go at a time, usually the latest, but we also monitor tip to get an idea of
# whether or not the next release is going to break anything.
# NOTE: If you change this version, change the corresponding conditions below in
# code coverage and deployment uploading (see the script and deploy sections).
go:
  - 1.9.2
  - tip

# Allow failure on Go tip, we just want to be able to track behavior there.
matrix:
  allow_failures:
    - go: tip

# Fetch vendored third-party dependencies and install a tool for merging
# coverage profiles.
before_install:
  - git submodule init
  - git submodule update
  - go get -u -v github.com/wadey/gocovmerge

# Skip the default install step since it doesn't make sense for Mutagen.
install: true

# Run tests, upload the coverage report (if not running on tip), and build
# bundles. We fold coverage report uploading into script to mirror the behavior
# on AppVeyor (which is necessary because AppVeyor's after_test doesn't seem to
# fail the build if an upload fails (which we want to do)).
# HACK: We have to use a custom script to invoke tests because we want a
# combined coverage report that includes all packages and go test currently
# doesn't support that (golang/go#6909).
# TODO: It looks like golang/go#6909 has been resolved by golang/go@283558e,
# which should be available in Go 1.10, so I think we'll be able to ditch our
# custom ci_testing.go script and just use the toolchain directly. We'll also be
# able to ditch gocovmerge and just get a unified coverage profile directly.
# Other relevant issues are golang/go#10271 and golang/go#21126, which are
# slight variations on the main issue and will also seemingly be resolved in
# Go 1.10. We may still need to find a way to skip the directories we have that
# are not actually Go packages - it depends whether or not they cause problems.
script:
  - go version
  - go run scripts/ci_testing.go --race
  - go run scripts/ci_testing.go --goarch=386 --no-cover
  - if [[ "$TRAVIS_GO_VERSION" =~ ^1\.9(\.[0-9]+)?$ ]]; then bash <(curl -s https://codecov.io/bash) ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then go run scripts/build.go --mode=release ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then go run scripts/build.go --mode=testing ; fi

# HACK: If we're doing a release deployment, convert the Windows bundles to zip
# format. This is a lot simpler than trying to add zip file support to the build
# script. Note that we don't convert the agent bundles - Mutagen knows how to
# read those and users don't need to unzip them (and shouldn't).
before_deploy:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then scripts/convert_windows_release_bundles.sh ; fi

# Upload build artifacts from macOS builders on tagged releases.
deploy:
  provider: releases
  api_key:
    secure: oGoH8k4iqfXizSDUNaFRMqG+q0hYjJcPQBkCSlDWC/enMtn2HyT4UI+vRCksastjNS6ltGrwlebKVyOzkWQCvN/apiteDHgcwPvaJr4ioEZ/UdNobbD2sRyQ6mntXZoQLmTCouDpj47xQA/8bpWSsKNJscIrWuzBr1IUCnDWGPR27ninXX7eueIB9W2BCiuaXvRcvOmLOQslQ+sZEsUjZ2tJ1IB2gQiQdE0yIeHR3A6WsEKkkQWecCnNvuuhtAJZ0bcvR/aKGm3NPPzmvNHu05whvb55qpWjVBdxExatHNXFal4xvesgmFGzlbxkTOHl6QMauuVPJ0ctAEsWMjeNGYHVtmjR7d9+bpgMhpTtxFz6j/HEVs1hzLcsE96LUkxsK6Mc6xpOVI41rsTMLNYIPqjcfBa4/VNUEBFbX8J68BhJ9Ou3zV1f1N1b4nm6PO3asfVgCbYQNTg0Yx3/27KlNzymccui/LmR3l9jbNdQ/KaH689ZFi6+kTL1U8/i/cPo3rv1goQM0vSbuUe9zoydlfCmn5mnFH85PV2/oW55NrTDoHOD6OMUMAma7c48I4+unVSdg4k3IM+YE0uXHJ/OyPifNUXgp+TMQRb5LerMfjvf7HMyMnPjZZsV4COb55hsdH3dx6Yp8BIUxtRV1yzWlBzRo3DIZ5QqYNydc4Cirok=
  skip_cleanup: true
  file_glob: true
  file: build/mutagen_*_*v*
  on:
    repo: havoc-io/mutagen
    condition: '"$TRAVIS_OS_NAME" == "osx" && "$TRAVIS_GO_VERSION" =~ ^1\.9(\.[0-9]+)?$'
    tags: true

# Send notifications.
notifications:
  email:
    - jacob@havoc.io
