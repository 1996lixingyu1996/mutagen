# Set the build version.
version: "{build}"

# Set the clone folder so that Mutagen ends up in the GOPATH.
clone_folder: C:\gopath\src\github.com\havoc-io\mutagen

# Set Go versions.
environment:
  GOPATH: C:\gopath
  matrix:
    - GOROOT: C:\go19
      RACEFLAG: --race
    - GOROOT: C:\go19-x86
init:
  - set PATH=%GOROOT%\bin;%GOPATH%\bin;%PATH%

# Disable AppVeyor's default Visual Studio build system.
build: off

# Fetch vendored third-party dependencies, install a tool for merging coverage
# profiles, and install the codecov.io Python-based upload tool.
before_test:
  - git submodule init
  - git submodule update
  - go get -u -v github.com/wadey/gocovmerge
  - pip install codecov

# Run tests and build bundles.
# HACK: We have to use a custom script to invoke tests because we want coverage
# reports for each and go test currently doesn't support generating either
# multiple coverage reports or a unified coverage report when using a "./..."
# package specification. We also use a custom tool to merge the generated
# coverage reports. We should monitor golang/go#6909 and golang/go#21126 so that
# we can remove this workaround once that Go toolchain supports this natively.
test_script:
  - go version
  - go run scripts/ci_testing.go %RACEFLAG%
  - go run scripts/build.go --mode=testing

# Merge and upload coverage reports.
after_test:
  - gocovmerge *.cover > coverage.txt
  - codecov

# Send notifications.
notifications:
  - provider: Email
    to:
      - jacob@havoc.io
    on_build_success: false
    on_build_failure: true
    on_build_status_changed: true
