# Set the build version.
version: "{build}"

# Set the clone folder so that Mutagen ends up in the GOPATH.
clone_folder: C:\gopath\src\github.com\havoc-io\mutagen

# Set Go versions and environment variables.
environment:
  GOPATH: C:\gopath
  GOROOT: C:\go110
  MUTAGEN_TEST_END_TO_END: "true"
init:
  - set PATH=%GOROOT%\bin;%GOPATH%\bin;%PATH%

# Disable AppVeyor's default Visual Studio build system.
build: off

# Fetch vendored third-party dependencies, install a tool for merging coverage
# profiles, and install the codecov.io Python-based upload tool.
before_test:
  - git submodule init
  - git submodule update
  - pip install codecov

# Run tests, upload the coverage report, and build bundles. We have to run a
# quick build before running tests because the tests rely on the agent bundle
# being available. We don't want to do a full build to start with though because
# that can take a while. We fold coverage report uploading into test_script
# because after_test doesn't seem to fail the build if an upload fails (which we
# want to do).
test_script:
  - go version
  - diskpart /s scripts/create_test_partitions_windows.txt
  - set MUTAGEN_TEST_FAT32_ROOT=V:\
  - go run scripts/build.go --mode=slim
  - go test -v -race -coverpkg=./pkg/... -coverprofile=coverage.txt ./pkg/...
  - set GOARCH=386
  - go run scripts/build.go --mode=slim
  - go test -v ./pkg/...
  - set GOARCH=amd64
  - codecov -X gcov -f coverage.txt
  - go run scripts/build.go --mode=testing

# Send notifications.
notifications:
  - provider: Email
    to:
      - jacob@havoc.io
    on_build_success: false
    on_build_failure: true
    on_build_status_changed: true
