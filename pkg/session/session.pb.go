// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/havoc-io/mutagen/pkg/session/session.proto

package session

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import sync "github.com/havoc-io/mutagen/pkg/sync"
import url "github.com/havoc-io/mutagen/pkg/url"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Version int32

const (
	Version_Unknown  Version = 0
	Version_Version1 Version = 1
)

var Version_name = map[int32]string{
	0: "Unknown",
	1: "Version1",
}
var Version_value = map[string]int32{
	"Unknown":  0,
	"Version1": 1,
}

func (x Version) String() string {
	return proto.EnumName(Version_name, int32(x))
}
func (Version) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_session_2ac2a6104d71eb26, []int{0}
}

type Session struct {
	Identifier           string               `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	Version              Version              `protobuf:"varint,2,opt,name=version,enum=session.Version" json:"version,omitempty"`
	CreationTime         *timestamp.Timestamp `protobuf:"bytes,3,opt,name=creationTime" json:"creationTime,omitempty"`
	CreatingVersionMajor uint32               `protobuf:"varint,4,opt,name=creatingVersionMajor" json:"creatingVersionMajor,omitempty"`
	CreatingVersionMinor uint32               `protobuf:"varint,5,opt,name=creatingVersionMinor" json:"creatingVersionMinor,omitempty"`
	CreatingVersionPatch uint32               `protobuf:"varint,6,opt,name=creatingVersionPatch" json:"creatingVersionPatch,omitempty"`
	Alpha                *url.URL             `protobuf:"bytes,7,opt,name=alpha" json:"alpha,omitempty"`
	Beta                 *url.URL             `protobuf:"bytes,8,opt,name=beta" json:"beta,omitempty"`
	Ignores              []string             `protobuf:"bytes,9,rep,name=ignores" json:"ignores,omitempty"`
	Paused               bool                 `protobuf:"varint,10,opt,name=paused" json:"paused,omitempty"`
	SymlinkMode          sync.SymlinkMode     `protobuf:"varint,11,opt,name=symlinkMode,enum=sync.SymlinkMode" json:"symlinkMode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_session_2ac2a6104d71eb26, []int{0}
}
func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (dst *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(dst, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Session) GetVersion() Version {
	if m != nil {
		return m.Version
	}
	return Version_Unknown
}

func (m *Session) GetCreationTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreationTime
	}
	return nil
}

func (m *Session) GetCreatingVersionMajor() uint32 {
	if m != nil {
		return m.CreatingVersionMajor
	}
	return 0
}

func (m *Session) GetCreatingVersionMinor() uint32 {
	if m != nil {
		return m.CreatingVersionMinor
	}
	return 0
}

func (m *Session) GetCreatingVersionPatch() uint32 {
	if m != nil {
		return m.CreatingVersionPatch
	}
	return 0
}

func (m *Session) GetAlpha() *url.URL {
	if m != nil {
		return m.Alpha
	}
	return nil
}

func (m *Session) GetBeta() *url.URL {
	if m != nil {
		return m.Beta
	}
	return nil
}

func (m *Session) GetIgnores() []string {
	if m != nil {
		return m.Ignores
	}
	return nil
}

func (m *Session) GetPaused() bool {
	if m != nil {
		return m.Paused
	}
	return false
}

func (m *Session) GetSymlinkMode() sync.SymlinkMode {
	if m != nil {
		return m.SymlinkMode
	}
	return sync.SymlinkMode_Sane
}

// Archive is a wrapper around Entry that allows identification of non-existent
// directories. In-memory, a nil-Entry (that arrives without any error)
// represents an absence of content on the filesystem. Unfortunately, there is
// no way to represent that as an encoded message (an empty byte slice would
// successfully decode to an empty directory entry). By adding a level of
// indirection that allows for an unset root entry, we can encode Entry messages
// in a way that allows us to represent absence.
type Archive struct {
	Root                 *sync.Entry `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Archive) Reset()         { *m = Archive{} }
func (m *Archive) String() string { return proto.CompactTextString(m) }
func (*Archive) ProtoMessage()    {}
func (*Archive) Descriptor() ([]byte, []int) {
	return fileDescriptor_session_2ac2a6104d71eb26, []int{1}
}
func (m *Archive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Archive.Unmarshal(m, b)
}
func (m *Archive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Archive.Marshal(b, m, deterministic)
}
func (dst *Archive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Archive.Merge(dst, src)
}
func (m *Archive) XXX_Size() int {
	return xxx_messageInfo_Archive.Size(m)
}
func (m *Archive) XXX_DiscardUnknown() {
	xxx_messageInfo_Archive.DiscardUnknown(m)
}

var xxx_messageInfo_Archive proto.InternalMessageInfo

func (m *Archive) GetRoot() *sync.Entry {
	if m != nil {
		return m.Root
	}
	return nil
}

func init() {
	proto.RegisterType((*Session)(nil), "session.Session")
	proto.RegisterType((*Archive)(nil), "session.Archive")
	proto.RegisterEnum("session.Version", Version_name, Version_value)
}

func init() {
	proto.RegisterFile("github.com/havoc-io/mutagen/pkg/session/session.proto", fileDescriptor_session_2ac2a6104d71eb26)
}

var fileDescriptor_session_2ac2a6104d71eb26 = []byte{
	// 416 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x51, 0x8b, 0xd3, 0x40,
	0x14, 0x85, 0x8d, 0xed, 0x36, 0xed, 0xcd, 0x2a, 0x75, 0x10, 0x19, 0x8a, 0xec, 0x86, 0xc5, 0x87,
	0x50, 0xd8, 0x89, 0x66, 0xf1, 0x55, 0xf0, 0xc1, 0x37, 0x17, 0x64, 0x76, 0xd7, 0xf7, 0x69, 0x3a,
	0x9b, 0x8c, 0x6d, 0xe6, 0x86, 0xc9, 0xa4, 0xd2, 0x3f, 0xea, 0xef, 0x91, 0x64, 0x26, 0xb8, 0x4a,
	0xa0, 0x3e, 0x94, 0x72, 0xcf, 0x39, 0x5f, 0xc2, 0x3d, 0x37, 0xf0, 0xb1, 0x50, 0xb6, 0x6c, 0x37,
	0x2c, 0xc7, 0x2a, 0x2d, 0xc5, 0x01, 0xf3, 0x6b, 0x85, 0x69, 0xd5, 0x5a, 0x51, 0x48, 0x9d, 0xd6,
	0xbb, 0x22, 0x6d, 0x64, 0xd3, 0x28, 0xd4, 0xc3, 0x3f, 0xab, 0x0d, 0x5a, 0x24, 0xa1, 0x1f, 0x57,
	0x97, 0x05, 0x62, 0xb1, 0x97, 0x69, 0x2f, 0x6f, 0xda, 0xc7, 0xd4, 0xaa, 0x4a, 0x36, 0x56, 0x54,
	0xb5, 0x4b, 0xae, 0xde, 0x9f, 0x7c, 0xc1, 0x51, 0xe7, 0xa9, 0xd4, 0xd6, 0x1c, 0x3d, 0x91, 0xfd,
	0x17, 0xd1, 0x1c, 0xab, 0xbd, 0xd2, 0x3b, 0xcf, 0x5c, 0x9f, 0x62, 0x5a, 0xb3, 0xef, 0x7e, 0x2e,
	0x7e, 0xf5, 0x6b, 0x02, 0xe1, 0x9d, 0xdb, 0x80, 0x5c, 0x00, 0xa8, 0xad, 0xd4, 0x56, 0x3d, 0x2a,
	0x69, 0x68, 0x10, 0x07, 0xc9, 0x82, 0x3f, 0x51, 0xc8, 0x1a, 0xc2, 0x83, 0x34, 0x5d, 0x94, 0x3e,
	0x8f, 0x83, 0xe4, 0x65, 0xb6, 0x64, 0x43, 0x17, 0xdf, 0x9d, 0xce, 0x87, 0x00, 0xf9, 0x04, 0xe7,
	0xb9, 0x91, 0xc2, 0x2a, 0xd4, 0xf7, 0xaa, 0x92, 0x74, 0x12, 0x07, 0x49, 0x94, 0xad, 0x98, 0x2b,
	0x89, 0x0d, 0x25, 0xb1, 0xfb, 0xa1, 0x24, 0xfe, 0x57, 0x9e, 0x64, 0xf0, 0xda, 0xcd, 0xba, 0xf0,
	0xcf, 0xbe, 0x15, 0x3f, 0xd0, 0xd0, 0x69, 0x1c, 0x24, 0x2f, 0xf8, 0xa8, 0x37, 0xc6, 0x28, 0x8d,
	0x86, 0x9e, 0x8d, 0x33, 0x9d, 0x37, 0xc2, 0x7c, 0x13, 0x36, 0x2f, 0xe9, 0x6c, 0x94, 0xe9, 0x3d,
	0x72, 0x01, 0x67, 0x62, 0x5f, 0x97, 0x82, 0x86, 0xfd, 0x52, 0x73, 0xd6, 0xd5, 0xf9, 0xc0, 0xbf,
	0x72, 0x27, 0x93, 0xb7, 0x30, 0xdd, 0x48, 0x2b, 0xe8, 0xfc, 0x1f, 0xbb, 0x57, 0x09, 0x85, 0x50,
	0x15, 0x1a, 0x8d, 0x6c, 0xe8, 0x22, 0x9e, 0x24, 0x0b, 0x3e, 0x8c, 0xe4, 0x0d, 0xcc, 0x6a, 0xd1,
	0x36, 0x72, 0x4b, 0x21, 0x0e, 0x92, 0x39, 0xf7, 0x13, 0xb9, 0x81, 0xc8, 0xdf, 0xf8, 0x16, 0xb7,
	0x92, 0x46, 0x7d, 0xf7, 0xaf, 0x58, 0x77, 0x7c, 0x76, 0xf7, 0xc7, 0xe0, 0x4f, 0x53, 0x57, 0x6b,
	0x08, 0x3f, 0x9b, 0xbc, 0x54, 0x07, 0x49, 0x2e, 0x61, 0x6a, 0x10, 0x6d, 0x7f, 0xd1, 0x28, 0x8b,
	0x1c, 0xf8, 0xa5, 0xfb, 0xce, 0x78, 0x6f, 0xac, 0xdf, 0x41, 0xe8, 0x17, 0x24, 0x11, 0x84, 0x0f,
	0x7a, 0xa7, 0xf1, 0xa7, 0x5e, 0x3e, 0x23, 0xe7, 0x30, 0xf7, 0xfa, 0x87, 0x65, 0xb0, 0x99, 0xf5,
	0x47, 0xbb, 0xf9, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x3c, 0x75, 0x8d, 0x29, 0x03, 0x00, 0x00,
}
