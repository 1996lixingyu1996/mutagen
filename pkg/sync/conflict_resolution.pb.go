// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sync/conflict_resolution.proto

package sync // import "github.com/havoc-io/mutagen/pkg/sync"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ConflictResolutionMode specifies the mode for conflict resolution during the
// reconciliation phase of bidirectional synchronization.
type ConflictResolutionMode int32

const (
	// ConflictResolutionMode_ConflictResolutionModeDefault represents an
	// unspecified conflict resolution mode. It is not valid for use with
	// Reconcile. It should be converted to one of the following values based on
	// the desired default behavior.
	ConflictResolutionMode_ConflictResolutionModeDefault ConflictResolutionMode = 0
	// ConflictResolutionMode_ConflictResolutionModeSafe specifies that
	// automatic conflict resolution should be performed only in cases where no
	// data would be lost. Specifically, this means that modified contents are
	// allowed to propagate to the opposite endpoint if the corresponding
	// contents on the opposite endpoint are unmodified or deleted. All other
	// conflicts are left unresolved.
	ConflictResolutionMode_ConflictResolutionModeSafe ConflictResolutionMode = 2
	// ConflictResolutionMode_ConflictResolutionModeAlphaWins performs the same
	// as ConflictResolutionMode_ConflictResolutionModeSafe, but specifies that
	// the alpha endpoint should win automatically in any conflict where alpha
	// and beta have both modified (not deleted) the same contents. Notably,
	// this still allows changes to contents on beta to propagate over deletion
	// of the corresponding contents on alpha.
	ConflictResolutionMode_ConflictResolutionModeAlphaWins ConflictResolutionMode = 3
	// ConflictResolutionMode_ConflictResolutionModeBetaWins performs the same
	// as ConflictResolutionMode_ConflictResolutionModeAlphaWins, but with the
	// winner and loser roles reversed.
	ConflictResolutionMode_ConflictResolutionModeBetaWins ConflictResolutionMode = 4
	// ConflictResolutionMode_ConflictResolutionModeAlphaWinsAll performs the
	// same as ConflictResolutionMode_ConflictResolutionModeAlphaWins, but
	// additionally specifies that deletions on alpha should win over
	// modifications to beta.
	ConflictResolutionMode_ConflictResolutionModeAlphaWinsAll ConflictResolutionMode = 5
	// ConflictResolutionMode_ConflictResolutionModeBetaWinsAll performs the
	// same as ConflictResolutionMode_ConflictResolutionModeAlphaWinsAll, but
	// with the winner and loser roles reversed.
	ConflictResolutionMode_ConflictResolutionModeBetaWinsAll ConflictResolutionMode = 6
)

var ConflictResolutionMode_name = map[int32]string{
	0: "ConflictResolutionModeDefault",
	2: "ConflictResolutionModeSafe",
	3: "ConflictResolutionModeAlphaWins",
	4: "ConflictResolutionModeBetaWins",
	5: "ConflictResolutionModeAlphaWinsAll",
	6: "ConflictResolutionModeBetaWinsAll",
}
var ConflictResolutionMode_value = map[string]int32{
	"ConflictResolutionModeDefault":      0,
	"ConflictResolutionModeSafe":         2,
	"ConflictResolutionModeAlphaWins":    3,
	"ConflictResolutionModeBetaWins":     4,
	"ConflictResolutionModeAlphaWinsAll": 5,
	"ConflictResolutionModeBetaWinsAll":  6,
}

func (x ConflictResolutionMode) String() string {
	return proto.EnumName(ConflictResolutionMode_name, int32(x))
}
func (ConflictResolutionMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_conflict_resolution_55c38d5f7c504231, []int{0}
}

func init() {
	proto.RegisterEnum("sync.ConflictResolutionMode", ConflictResolutionMode_name, ConflictResolutionMode_value)
}

func init() {
	proto.RegisterFile("sync/conflict_resolution.proto", fileDescriptor_conflict_resolution_55c38d5f7c504231)
}

var fileDescriptor_conflict_resolution_55c38d5f7c504231 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2b, 0xae, 0xcc, 0x4b,
	0xd6, 0x4f, 0xce, 0xcf, 0x4b, 0xcb, 0xc9, 0x4c, 0x2e, 0x89, 0x2f, 0x4a, 0x2d, 0xce, 0xcf, 0x29,
	0x2d, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xc9, 0x6b, 0x7d,
	0x66, 0xe4, 0x12, 0x73, 0x86, 0xaa, 0x09, 0x82, 0x2b, 0xf1, 0xcd, 0x4f, 0x49, 0x15, 0x52, 0xe4,
	0x92, 0xc5, 0x2e, 0xe3, 0x92, 0x9a, 0x96, 0x58, 0x9a, 0x53, 0x22, 0xc0, 0x20, 0x24, 0xc7, 0x25,
	0x85, 0x5d, 0x49, 0x70, 0x62, 0x5a, 0xaa, 0x00, 0x93, 0x90, 0x32, 0x97, 0x3c, 0x76, 0x79, 0xc7,
	0x9c, 0x82, 0x8c, 0xc4, 0xf0, 0xcc, 0xbc, 0x62, 0x01, 0x66, 0x21, 0x25, 0x2e, 0x39, 0xec, 0x8a,
	0x9c, 0x52, 0x4b, 0x20, 0x6a, 0x58, 0x84, 0xd4, 0xb8, 0x94, 0x08, 0x18, 0xe4, 0x98, 0x93, 0x23,
	0xc0, 0x2a, 0xa4, 0xca, 0xa5, 0x88, 0xdf, 0x2c, 0x90, 0x32, 0x36, 0x27, 0xb5, 0x28, 0x95, 0xf4,
	0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c, 0xfd, 0x8c, 0xc4, 0xb2, 0xfc, 0x64, 0xdd,
	0xcc, 0x7c, 0xfd, 0xdc, 0xd2, 0x92, 0xc4, 0xf4, 0xd4, 0x3c, 0xfd, 0x82, 0xec, 0x74, 0x7d, 0x50,
	0xe8, 0x24, 0xb1, 0x81, 0x83, 0xca, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x6f, 0xe5, 0xcf, 0x56,
	0x4c, 0x01, 0x00, 0x00,
}
