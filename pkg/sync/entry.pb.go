// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/havoc-io/mutagen/pkg/sync/entry.proto

package sync

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EntryKind int32

const (
	EntryKind_Directory EntryKind = 0
	EntryKind_File      EntryKind = 1
	EntryKind_Symlink   EntryKind = 2
)

var EntryKind_name = map[int32]string{
	0: "Directory",
	1: "File",
	2: "Symlink",
}
var EntryKind_value = map[string]int32{
	"Directory": 0,
	"File":      1,
	"Symlink":   2,
}

func (x EntryKind) String() string {
	return proto.EnumName(EntryKind_name, int32(x))
}
func (EntryKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_entry_2bdc8b44e4b70c16, []int{0}
}

type Entry struct {
	Kind                 EntryKind         `protobuf:"varint,1,opt,name=kind,enum=sync.EntryKind" json:"kind,omitempty"`
	Executable           bool              `protobuf:"varint,2,opt,name=executable" json:"executable,omitempty"`
	Digest               []byte            `protobuf:"bytes,3,opt,name=digest,proto3" json:"digest,omitempty"`
	Contents             map[string]*Entry `protobuf:"bytes,4,rep,name=contents" json:"contents,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Target               string            `protobuf:"bytes,5,opt,name=target" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}
func (*Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_entry_2bdc8b44e4b70c16, []int{0}
}
func (m *Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entry.Unmarshal(m, b)
}
func (m *Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entry.Marshal(b, m, deterministic)
}
func (dst *Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entry.Merge(dst, src)
}
func (m *Entry) XXX_Size() int {
	return xxx_messageInfo_Entry.Size(m)
}
func (m *Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_Entry proto.InternalMessageInfo

func (m *Entry) GetKind() EntryKind {
	if m != nil {
		return m.Kind
	}
	return EntryKind_Directory
}

func (m *Entry) GetExecutable() bool {
	if m != nil {
		return m.Executable
	}
	return false
}

func (m *Entry) GetDigest() []byte {
	if m != nil {
		return m.Digest
	}
	return nil
}

func (m *Entry) GetContents() map[string]*Entry {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (m *Entry) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func init() {
	proto.RegisterType((*Entry)(nil), "sync.Entry")
	proto.RegisterMapType((map[string]*Entry)(nil), "sync.Entry.ContentsEntry")
	proto.RegisterEnum("sync.EntryKind", EntryKind_name, EntryKind_value)
}

func init() {
	proto.RegisterFile("github.com/havoc-io/mutagen/pkg/sync/entry.proto", fileDescriptor_entry_2bdc8b44e4b70c16)
}

var fileDescriptor_entry_2bdc8b44e4b70c16 = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x4d, 0x4f, 0xb4, 0x30,
	0x14, 0x85, 0xdf, 0xf2, 0x31, 0x2f, 0x5c, 0x1c, 0x25, 0x5d, 0x18, 0x74, 0x61, 0x50, 0x37, 0xc4,
	0x44, 0x50, 0x8c, 0x89, 0x71, 0xeb, 0x47, 0x4c, 0xdc, 0xd5, 0x5f, 0x00, 0xa5, 0x61, 0x1a, 0xa0,
	0x9d, 0xc0, 0x65, 0x22, 0x3f, 0xde, 0xc4, 0xc0, 0x90, 0x09, 0xee, 0x7a, 0xce, 0xd3, 0xf6, 0x9c,
	0x7b, 0xe1, 0xae, 0x94, 0xb8, 0xe9, 0xf3, 0x98, 0xeb, 0x26, 0xd9, 0x64, 0x3b, 0xcd, 0x6f, 0xa5,
	0x4e, 0x9a, 0x1e, 0xb3, 0x52, 0xa8, 0x64, 0x5b, 0x95, 0x49, 0x37, 0x28, 0x9e, 0x08, 0x85, 0xed,
	0x10, 0x6f, 0x5b, 0x8d, 0x9a, 0x5a, 0xa3, 0x73, 0xf5, 0x43, 0xc0, 0x7e, 0x1b, 0x5d, 0x7a, 0x0d,
	0x56, 0x25, 0x55, 0x11, 0x90, 0x90, 0x44, 0xc7, 0xe9, 0x49, 0x3c, 0xe2, 0x78, 0x42, 0x9f, 0x52,
	0x15, 0x6c, 0x82, 0xf4, 0x02, 0x40, 0x7c, 0x0b, 0xde, 0x63, 0x96, 0xd7, 0x22, 0x30, 0x42, 0x12,
	0x39, 0x6c, 0xe1, 0xd0, 0x53, 0x58, 0x15, 0xb2, 0x14, 0x1d, 0x06, 0x66, 0x48, 0xa2, 0x23, 0x36,
	0x2b, 0xfa, 0x08, 0x0e, 0xd7, 0x0a, 0x85, 0xc2, 0x2e, 0xb0, 0x42, 0x33, 0xf2, 0xd2, 0xb3, 0x45,
	0x40, 0xfc, 0x32, 0xb3, 0x49, 0xb1, 0xc3, 0xd5, 0xf1, 0x3b, 0xcc, 0xda, 0x52, 0x60, 0x60, 0x87,
	0x24, 0x72, 0xd9, 0xac, 0xce, 0x3f, 0x60, 0xfd, 0xe7, 0x09, 0xf5, 0xc1, 0xac, 0xc4, 0x30, 0x75,
	0x77, 0xd9, 0x78, 0xa4, 0x97, 0x60, 0xef, 0xb2, 0xba, 0xdf, 0x97, 0xf4, 0x52, 0x6f, 0x11, 0xc7,
	0xf6, 0xe4, 0xd9, 0x78, 0x22, 0x37, 0xf7, 0xe0, 0x1e, 0x66, 0xa4, 0x6b, 0x70, 0x5f, 0x65, 0x2b,
	0x38, 0xea, 0x76, 0xf0, 0xff, 0x51, 0x07, 0xac, 0x77, 0x59, 0x0b, 0x9f, 0x50, 0x0f, 0xfe, 0x7f,
	0x0d, 0x4d, 0x2d, 0x55, 0xe5, 0x1b, 0xf9, 0x6a, 0xda, 0xdf, 0xc3, 0x6f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x0e, 0x9f, 0x23, 0x58, 0x73, 0x01, 0x00, 0x00,
}
