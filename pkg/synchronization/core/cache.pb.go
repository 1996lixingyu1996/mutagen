// Code generated by protoc-gen-go. DO NOT EDIT.
// source: synchronization/core/cache.proto

package core

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// CacheEntry represents cache data for a file on disk.
type CacheEntry struct {
	// Mode stores the value of the POSIX mode bits (i.e. the st_mode member of
	// struct stat). On Windows, this value is computed using the Go os.FileMode
	// value retrieved through the os package (for which bit definitions are
	// guaranteed to be stable).
	Mode uint32 `protobuf:"varint,1,opt,name=mode,proto3" json:"mode,omitempty"`
	// ModificationTime is the cached modification time.
	ModificationTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=modificationTime,proto3" json:"modificationTime,omitempty"`
	// Size is the cached size.
	Size uint64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// FileID is the file identifier. On POSIX systems it is the inode number.
	// On Windows it is currently 0.
	FileID uint64 `protobuf:"varint,4,opt,name=fileID,proto3" json:"fileID,omitempty"`
	// Digest is the cached digest for file entries.
	Digest               []byte   `protobuf:"bytes,9,opt,name=digest,proto3" json:"digest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheEntry) Reset()         { *m = CacheEntry{} }
func (m *CacheEntry) String() string { return proto.CompactTextString(m) }
func (*CacheEntry) ProtoMessage()    {}
func (*CacheEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_b56e0ad2085c3d36, []int{0}
}

func (m *CacheEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheEntry.Unmarshal(m, b)
}
func (m *CacheEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheEntry.Marshal(b, m, deterministic)
}
func (m *CacheEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheEntry.Merge(m, src)
}
func (m *CacheEntry) XXX_Size() int {
	return xxx_messageInfo_CacheEntry.Size(m)
}
func (m *CacheEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheEntry.DiscardUnknown(m)
}

var xxx_messageInfo_CacheEntry proto.InternalMessageInfo

func (m *CacheEntry) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *CacheEntry) GetModificationTime() *timestamp.Timestamp {
	if m != nil {
		return m.ModificationTime
	}
	return nil
}

func (m *CacheEntry) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *CacheEntry) GetFileID() uint64 {
	if m != nil {
		return m.FileID
	}
	return 0
}

func (m *CacheEntry) GetDigest() []byte {
	if m != nil {
		return m.Digest
	}
	return nil
}

// Cache provides a store for file metadata and digets to allow for efficient
// rescans.
type Cache struct {
	// Entries is a map from scan path to cache entry.
	Entries              map[string]*CacheEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Cache) Reset()         { *m = Cache{} }
func (m *Cache) String() string { return proto.CompactTextString(m) }
func (*Cache) ProtoMessage()    {}
func (*Cache) Descriptor() ([]byte, []int) {
	return fileDescriptor_b56e0ad2085c3d36, []int{1}
}

func (m *Cache) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cache.Unmarshal(m, b)
}
func (m *Cache) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cache.Marshal(b, m, deterministic)
}
func (m *Cache) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cache.Merge(m, src)
}
func (m *Cache) XXX_Size() int {
	return xxx_messageInfo_Cache.Size(m)
}
func (m *Cache) XXX_DiscardUnknown() {
	xxx_messageInfo_Cache.DiscardUnknown(m)
}

var xxx_messageInfo_Cache proto.InternalMessageInfo

func (m *Cache) GetEntries() map[string]*CacheEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func init() {
	proto.RegisterType((*CacheEntry)(nil), "core.CacheEntry")
	proto.RegisterType((*Cache)(nil), "core.Cache")
	proto.RegisterMapType((map[string]*CacheEntry)(nil), "core.Cache.EntriesEntry")
}

func init() { proto.RegisterFile("synchronization/core/cache.proto", fileDescriptor_b56e0ad2085c3d36) }

var fileDescriptor_b56e0ad2085c3d36 = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x6a, 0xfa, 0x40,
	0x10, 0xc6, 0x59, 0x8d, 0xfe, 0x71, 0xf5, 0x0f, 0xb2, 0x87, 0xb2, 0x78, 0x69, 0xf0, 0x50, 0x72,
	0xe9, 0x2e, 0xd8, 0x52, 0x4a, 0x8f, 0x6d, 0x2d, 0x14, 0x7a, 0x0a, 0x9e, 0x7a, 0x8b, 0xeb, 0x98,
	0x0c, 0xba, 0x19, 0x49, 0x36, 0x42, 0x7c, 0x83, 0xbe, 0x4b, 0x1f, 0xb2, 0x64, 0x63, 0x40, 0x68,
	0x6f, 0x33, 0xdf, 0x37, 0xf3, 0xdb, 0xfd, 0x76, 0x79, 0x58, 0xd6, 0xb9, 0xc9, 0x0a, 0xca, 0xf1,
	0x94, 0x38, 0xa4, 0x5c, 0x1b, 0x2a, 0x40, 0x9b, 0xc4, 0x64, 0xa0, 0x0e, 0x05, 0x39, 0x12, 0x41,
	0xa3, 0xcc, 0xae, 0x53, 0xa2, 0x74, 0x0f, 0xda, 0x6b, 0xeb, 0x6a, 0xab, 0x1d, 0x5a, 0x28, 0x5d,
	0x62, 0x0f, 0xed, 0xd8, 0xfc, 0x9b, 0x71, 0xfe, 0xd2, 0xac, 0x2d, 0x73, 0x57, 0xd4, 0x42, 0xf0,
	0xc0, 0xd2, 0x06, 0x24, 0x0b, 0x59, 0xf4, 0x3f, 0xf6, 0xb5, 0x78, 0xe3, 0x53, 0x4b, 0x1b, 0xdc,
	0xa2, 0xf1, 0x47, 0xad, 0xd0, 0x82, 0xec, 0x85, 0x2c, 0x1a, 0x2f, 0x66, 0xaa, 0xc5, 0xab, 0x0e,
	0xaf, 0x56, 0x1d, 0x3e, 0xfe, 0xb5, 0xd3, 0xb0, 0x4b, 0x3c, 0x81, 0xec, 0x87, 0x2c, 0x0a, 0x62,
	0x5f, 0x8b, 0x2b, 0x3e, 0xdc, 0xe2, 0x1e, 0xde, 0x5f, 0x65, 0xe0, 0xd5, 0x73, 0xd7, 0xe8, 0x1b,
	0x4c, 0xa1, 0x74, 0x72, 0x14, 0xb2, 0x68, 0x12, 0x9f, 0xbb, 0xf9, 0x17, 0xe3, 0x03, 0x7f, 0x5d,
	0xb1, 0xe0, 0xff, 0x20, 0x77, 0x05, 0x42, 0x29, 0x59, 0xd8, 0x8f, 0xc6, 0x0b, 0xa9, 0x9a, 0xc4,
	0xca, 0xbb, 0x6a, 0xd9, 0x5a, 0x3e, 0x54, 0xdc, 0x0d, 0xce, 0x3e, 0xf8, 0xe4, 0xd2, 0x10, 0x53,
	0xde, 0xdf, 0x41, 0xed, 0xc3, 0x8e, 0xe2, 0xa6, 0x14, 0x37, 0x7c, 0x70, 0x4c, 0xf6, 0x55, 0x17,
	0x70, 0x7a, 0xc1, 0x6c, 0x59, 0xad, 0xfd, 0xd4, 0x7b, 0x64, 0xcf, 0x0f, 0x9f, 0xf7, 0x29, 0xba,
	0xac, 0x5a, 0x2b, 0x43, 0x56, 0x67, 0xc9, 0x91, 0xcc, 0x2d, 0x92, 0xb6, 0x95, 0x4b, 0x52, 0xc8,
	0xf5, 0x61, 0x97, 0xea, 0xbf, 0x7e, 0x69, 0x3d, 0xf4, 0xaf, 0x75, 0xf7, 0x13, 0x00, 0x00, 0xff,
	0xff, 0xba, 0x76, 0xcc, 0x30, 0xc4, 0x01, 0x00, 0x00,
}
