syntax = "proto3";

package sync;

import "google/protobuf/timestamp.proto";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;

message CacheEntry {
    // Mode stores the value of the Go os package's FileMode type. The meaning
    // of this value is defined to be stable (even if we'd have to implement its
    // computation ourselves when porting to another language), so it's safe to
    // use, and it's a relatively sane implementation based on POSIX mode bits.
    // At the moment, we only use the type bits of this value, so we might
    // technically be able to get away with not storing the mode bits and just
    // storing something like an EntryKind here instead. We definitely need some
    // sort of type information though, in case we start supporting cache
    // entries for things that aren't files, e.g. symlinks. But it's better to
    // just have this additional mode information available for the sake of
    // generality and extensibility. It may come in useful if we want to
    // implement permission propagation or need a better change detection
    // heuristic. If we decide to port to another language and determine that we
    // don't need anything expect type information, we may want to deprecate
    // this field (since it might be painful to reimplement its calculation) and
    // use EntryKind instead. Unfortunately that'd be a bit difficult since the
    // zero value of EntryKind is Directory and all cache entries are files, so
    // using the default value wouldn't work, but we could just add a
    // CacheEntryKind enumeration. At the moment though, it's highly unlikely
    // that we'll switch away from Go, and I'm willing to live with this
    // slightly "unclean" design, especially given its potential and the
    // relative ease of deprecating it.
    uint32 mode = 1;
    google.protobuf.Timestamp modificationTime = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    uint64 size = 3;
    bytes digest = 4;
}

message Cache {
    map<string, CacheEntry> entries = 1;
}
