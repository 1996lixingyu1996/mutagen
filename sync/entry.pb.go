// Code generated by protoc-gen-go.
// source: entry.proto
// DO NOT EDIT!

package sync

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EntryKind int32

const (
	EntryKind_Directory EntryKind = 0
	EntryKind_File      EntryKind = 1
)

var EntryKind_name = map[int32]string{
	0: "Directory",
	1: "File",
}
var EntryKind_value = map[string]int32{
	"Directory": 0,
	"File":      1,
}

func (x EntryKind) String() string {
	return proto.EnumName(EntryKind_name, int32(x))
}
func (EntryKind) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type Entry struct {
	Kind       EntryKind     `protobuf:"varint,1,opt,name=kind,enum=sync.EntryKind" json:"kind,omitempty"`
	Executable bool          `protobuf:"varint,2,opt,name=executable" json:"executable,omitempty"`
	Digest     []byte        `protobuf:"bytes,3,opt,name=digest,proto3" json:"digest,omitempty"`
	Contents   []*NamedEntry `protobuf:"bytes,4,rep,name=contents" json:"contents,omitempty"`
}

func (m *Entry) Reset()                    { *m = Entry{} }
func (m *Entry) String() string            { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()               {}
func (*Entry) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Entry) GetKind() EntryKind {
	if m != nil {
		return m.Kind
	}
	return EntryKind_Directory
}

func (m *Entry) GetExecutable() bool {
	if m != nil {
		return m.Executable
	}
	return false
}

func (m *Entry) GetDigest() []byte {
	if m != nil {
		return m.Digest
	}
	return nil
}

func (m *Entry) GetContents() []*NamedEntry {
	if m != nil {
		return m.Contents
	}
	return nil
}

type NamedEntry struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Entry *Entry `protobuf:"bytes,2,opt,name=entry" json:"entry,omitempty"`
}

func (m *NamedEntry) Reset()                    { *m = NamedEntry{} }
func (m *NamedEntry) String() string            { return proto.CompactTextString(m) }
func (*NamedEntry) ProtoMessage()               {}
func (*NamedEntry) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *NamedEntry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedEntry) GetEntry() *Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func init() {
	proto.RegisterType((*Entry)(nil), "sync.Entry")
	proto.RegisterType((*NamedEntry)(nil), "sync.NamedEntry")
	proto.RegisterEnum("sync.EntryKind", EntryKind_name, EntryKind_value)
}

func init() { proto.RegisterFile("entry.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x90, 0xcd, 0x4a, 0x03, 0x31,
	0x10, 0xc7, 0x8d, 0x4d, 0xcb, 0xee, 0xac, 0x1f, 0xcb, 0x1c, 0x24, 0x27, 0x89, 0xd5, 0x43, 0x10,
	0xd9, 0xc3, 0xfa, 0x08, 0x7e, 0x5c, 0x04, 0x0f, 0x79, 0x83, 0x6d, 0x32, 0x48, 0xb0, 0x4d, 0x24,
	0x1b, 0xc1, 0x7d, 0x0d, 0x9f, 0x58, 0x3a, 0x95, 0xb6, 0xb7, 0xe4, 0xff, 0x1b, 0xf8, 0xff, 0x66,
	0xa0, 0xa1, 0x58, 0xf2, 0xd4, 0x7d, 0xe5, 0x54, 0x12, 0xca, 0x71, 0x8a, 0x6e, 0xf9, 0x2b, 0x60,
	0xfe, 0xb2, 0x4d, 0xf1, 0x16, 0xe4, 0x67, 0x88, 0x5e, 0x09, 0x2d, 0xcc, 0x45, 0x7f, 0xd9, 0x6d,
	0x71, 0xc7, 0xe8, 0x2d, 0x44, 0x6f, 0x19, 0xe2, 0x35, 0x00, 0xfd, 0x90, 0xfb, 0x2e, 0xc3, 0x6a,
	0x4d, 0xea, 0x54, 0x0b, 0x53, 0xd9, 0xa3, 0x04, 0xaf, 0x60, 0xe1, 0xc3, 0x07, 0x8d, 0x45, 0xcd,
	0xb4, 0x30, 0x67, 0xf6, 0xff, 0x87, 0x0f, 0x50, 0xb9, 0x14, 0x0b, 0xc5, 0x32, 0x2a, 0xa9, 0x67,
	0xa6, 0xe9, 0xdb, 0x5d, 0xc1, 0xfb, 0xb0, 0x21, 0xcf, 0x2d, 0x76, 0x3f, 0xb1, 0x7c, 0x02, 0x38,
	0xe4, 0x88, 0x20, 0xe3, 0xb0, 0x21, 0x16, 0xab, 0x2d, 0xbf, 0xf1, 0x06, 0xe6, 0xbc, 0x0b, 0x2b,
	0x34, 0x7d, 0x73, 0x64, 0x6b, 0x77, 0xe4, 0xfe, 0x0e, 0xea, 0xbd, 0x3d, 0x9e, 0x43, 0xfd, 0x1c,
	0x32, 0xb9, 0x92, 0xf2, 0xd4, 0x9e, 0x60, 0x05, 0xf2, 0x35, 0xac, 0xa9, 0x15, 0xab, 0x05, 0x1f,
	0xe3, 0xf1, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x52, 0x8f, 0x6e, 0x33, 0x1b, 0x01, 0x00, 0x00,
}
